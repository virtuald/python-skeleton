#!/usr/bin/env python

from __future__ import print_function

import os, subprocess, sys
from os.path import dirname, exists, join
from distutils.core import setup

setup_dir = dirname(__file__)
git_root = join(setup_dir, '.git')

base_package = 'package'

packages = [
  base_package
]

scripts = [
]

# Automatically generate a version.py based on the git version
if exists(join(setup_dir, '.git')):
    p = subprocess.Popen(["git", "describe", "--tags", "--dirty=-dirty"],
                         stdout=subprocess.PIPE,
                         stderr=subprocess.PIPE)
    out, err = p.communicate()
    # Make sure the git version has at least one tag
    if err:
        print("Error: You need to create a tag for this repo before you can run setup.py")
        sys.exit(1)
    
    # Create the version.py file
    with open(join(setup_dir, 'src', base_package, 'version.py'), 'w') as fp:
        fp.write("# Autogenerated by setup.py\n__version__ = '{0}'".format(out.decode('utf-8').rstrip()))

with open(join(dirname(__file__), 'README.md'), 'r') as readme_file:
    long_description = readme_file.read()

with open(join(setup_dir, 'src', base_package, 'version.py')) as fp:
    exec(compile(fp.read(), 'version.py', 'exec'), {}, globals())

install_requires=open(join(setup_dir, 'requirements.txt')).readlines()

setup(name='python_skeleton',
      version=__version__,
      description='',
      long_description=long_description,
      author='Dustin Spicuzza',
      author_email='dustin@virtualroadside.com',
      package_dir={'': 'src'},
      packages=packages,
      scripts=scripts,
      install_requires=install_requires,
      )


